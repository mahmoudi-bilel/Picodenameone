package com.webwizards.myapp;


import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.codename1.ui.FontImage;
import com.codename1.ui.events.ActionEvent;
import com.codename1.ui.events.ActionListener;
import com.codename1.ui.layouts.FlowLayout;
import com.webwizads.gui.ShowPublications;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);
        
        
         

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        } 
        Form f1 = new Form(new FlowLayout(CENTER, CENTER));
        f1.add(new Label("Web Site"));

        Form f2 = new Form(new FlowLayout(CENTER, CENTER));
        f2.add(new Label("Settings"));

        Form f3 = new Form(new FlowLayout(CENTER, CENTER));
        f3.add(new Label("About"));  
     
        
        Form home = new Form("Menu");

        Toolbar tb = home.getToolbar();
        

        tb.addMaterialCommandToSideMenu("Publications", FontImage.MATERIAL_WEB, (ActionListener) (ActionEvent evt) -> {
            new ShowPublications().show();
        });
         
        tb.addMaterialCommandToSideMenu("Rendez-vous", FontImage.MATERIAL_SETTINGS, e -> {
            f2.show();
        });
        
        tb.addMaterialCommandToSideMenu("A propos", FontImage.MATERIAL_INFO, e -> {
            f3.show();
        });       
        
        f1.getToolbar().addCommandToLeftBar("Back",null, (ActionListener) (ActionEvent evt) -> {
            home.showBack();
        });
        
        f2.getToolbar().addCommandToRightBar("Back", null, (ActionListener) (ActionEvent evt) -> {
            home.showBack();
        });
        
        f3.getToolbar().addCommandToOverflowMenu("Back", null, (ActionListener) (ActionEvent evt) -> {
            home.showBack();
        });
        
       home.add(new Label("Page d'accueil"));
        home.show();
    
        
    } 

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
